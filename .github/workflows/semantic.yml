name: Semantic PR Validation

on:
  pull_request:
    types:
      - opened
      - edited
      - reopened
      - synchronize
      - labeled

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

defaults:
  run:
    shell: bash

jobs:
  validate-pr-title:
    name: Validate Pull Request Title
    runs-on: ubuntu-latest
    timeout-minutes: 5
    permissions:
      pull-requests: read
      statuses: write

    steps:
      - name: Check if PR title should be ignored
        id: check-ignore
        run: |
          PR_TITLE="${{ github.event.pull_request.title }}"
          PR_AUTHOR="${{ github.event.pull_request.user.login }}"
          USER_TYPE="${{ github.event.pull_request.user.type }}"

          # Check if created by bot
          if [[ "$USER_TYPE" == "Bot" ]] || [[ "$PR_AUTHOR" == *"[bot]" ]]; then
            echo "ignore=true" >> $GITHUB_OUTPUT
            echo "Ignoring PR title validation for bot user: $PR_AUTHOR"
          # Check if title matches ignore patterns
          elif [[ "$PR_TITLE" =~ ^(Revert|Version Packages|DO NOT MERGE) ]]; then
            echo "ignore=true" >> $GITHUB_OUTPUT
            echo "Ignoring PR title validation for: $PR_TITLE"
          else
            echo "ignore=false" >> $GITHUB_OUTPUT
          fi

      - name: semantic-pull-request
        if: steps.check-ignore.outputs.ignore != 'true'
        uses: amannn/action-semantic-pull-request@v5
        with:
          types: |
            build
            chore
            ci
            docs
            feat
            fix
            perf
            refactor
            revert
            style
            test

          requireScope: true

          headerPattern: '^(\w+)\(([a-z]+)\): (.+)$'
          headerPatternCorrespondence: type, scope, subject

          subjectPattern: '^[a-zA-Z0-9\s\-_.,!]{1,50}$'
          subjectPatternError: |
            The subject {subject} in pull request title {title}
            must be max 50 characters, and can only contain:
            letters (a–z, A–Z), numbers, spaces, dash, underscore, dot, comma, and exclamation mark.

          validateSingleCommit: true
          validateSingleCommitMatchesPrTitle: true

        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
